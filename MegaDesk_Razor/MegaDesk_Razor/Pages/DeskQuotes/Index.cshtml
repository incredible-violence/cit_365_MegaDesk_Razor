@page
@model MegaDesk_Razor.Pages.DeskQuotes.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form>
    <p>
        Enter quote name: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />



    </p>
</form>
<table class="table">
    <thead>
        <tr>

            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.QuoteName"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.DeskQuote[0].CustomerName)
                </a>

            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.DeskQuote[0].OrderDate)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].RushDays)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].Drawers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].deskMaterial)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].Width)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].Length)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].QuoteTotal)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.DeskQuote) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RushDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Drawers)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.deskMaterial)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Width)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Length)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuoteTotal)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.DeskQuoteID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.DeskQuoteID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.DeskQuoteID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.DeskQuote.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.DeskQuote.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.DeskQuote.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.DeskQuote.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>
